// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Senai.Senatur.WebApi.Contexts;

namespace Senai.Senatur.WebApi.Migrations
{
    [DbContext(typeof(SenaturContext))]
    partial class SenaturContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Pacotes", b =>
                {
                    b.Property<int>("IdPacote")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT");

                    b.Property<DateTime>("DataIda")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("DataVolta")
                        .HasColumnType("DATE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("NomePacote")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL");

                    b.HasKey("IdPacote");

                    b.ToTable("Pacotes");

                    b.HasData(
                        new { IdPacote = 1, Ativo = true, DataIda = new DateTime(2020, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "O que não falta em Salvador são atrações. Prova disso são as praias, os museus e as construções seculares que dão um charme mais que especial à região. A cidade, sinônimo de alegria, também é conhecida pela efervescência cultural que acredenciou como um dos destinos mais procurados por turistas brasileiros e estrangeiros.O Pelourinho e o Elevador são alguns dos principais pontos de visitação", NomeCidade = "Salvador", NomePacote = "SALVADOR - 5 DIAS / 4 DIÁRIAS", Valor = 854.00m },
                        new { IdPacote = 2, Ativo = true, DataIda = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "O Litoral Norte da Bahia conta com inúmeras praias emolduradas por coqueiros, além de piscinas naturais de águas mornas que são protegidas por recifes e habitadas por peixes coloridos. Banhos de mar em águas calmas ou agitadas, mergulho com snorkel, caminhada pela orla e calçadões, passeios de bicicleta, pontos turísticos históricos, interação com animais e até baladas estão entre as atrações da região. Destacam-se as praias de Guarajuba, Imbassaí, Praia do Forte e Costa do Sauipe.", NomeCidade = "Salvador", NomePacote = "RESORTS NA BAHIA - LITORAL NORTE - 5 DIAS / 4 DIÁRIAS", Valor = 1826.00m },
                        new { IdPacote = 3, Ativo = true, DataIda = new DateTime(2020, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), DataVolta = new DateTime(2020, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "O Litoral Norte da Bahia conta com inúmeras praias emolduradas por coqueiros, além de piscinas naturais de águas mornas que são protegidas por recifes e habitadas por peixes coloridos. Banhos de mar em águas calmas ou agitadas, mergulho com snorkel, caminhada pela orla e calçadões, passeios de bicicleta, pontos turísticos históricos, interação com animais e até baladas estão entre as atrações da região. Destacam-se as praias de Guarajuba, Imbassaí, Praia do Forte e Costa do Sauipe.", NomeCidade = "Bonito", NomePacote = "- BONITO VIA CAMPO GRANDE - DIÁRIAS", Valor = 1004.00m }
                    );
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.TiposUsuarios", b =>
                {
                    b.Property<int>("TipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int?>("UsuariosIdUsuario");

                    b.HasKey("TipoUsuario");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("TiposUsuario");

                    b.HasData(
                        new { TipoUsuario = 1, Titulo = "ADMINISTRADOR" },
                        new { TipoUsuario = 2, Titulo = "CLIENTE" }
                    );
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("IdTipoUsuario");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasMaxLength(30);

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new { IdUsuario = 1, Email = "admin@admin.com", IdTipoUsuario = 1, Senha = "admin", Titulo = "ADMINISTRADOR" },
                        new { IdUsuario = 2, Email = "cliente@cliente.com", IdTipoUsuario = 2, Senha = "cliente", Titulo = "CLIENTE" }
                    );
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.TiposUsuarios", b =>
                {
                    b.HasOne("Senai.Senatur.WebApi.Domains.Usuarios")
                        .WithMany("TiposUsuarios")
                        .HasForeignKey("UsuariosIdUsuario");
                });

            modelBuilder.Entity("Senai.Senatur.WebApi.Domains.Usuarios", b =>
                {
                    b.HasOne("Senai.Senatur.WebApi.Domains.TiposUsuarios", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
